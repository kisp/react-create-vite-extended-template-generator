---
- name: My Play
  hosts: all
  gather_facts: false
  vars:
    app_name: my-app-template
    create_vite_template: react-ts
    create_vite_command: >
      npx create-vite {{ app_name }} --template {{ create_vite_template }}
  tasks:
    - name: Install create-vite
      community.general.npm:
        name: create-vite
        version: 5.2.3
        path: node_modules

    - name: Delete package.json and package-lock.json created above
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - package.json
        - package-lock.json

    - name: Run create-vite
      ansible.builtin.command:
        cmd: "{{ create_vite_command }}"
        creates: "{{ app_name }}"

    - name: Run git init
      ansible.builtin.command:
        cmd: git init
        chdir: "{{ app_name }}"
        creates: .git
      tags:
        - skip_ansible_lint

    - name: Add user name to git config
      community.general.git_config:
        name: user.name
        repo: "{{ app_name }}"
        scope: local
        value: 'CI User'

    - name: Add user email to git config
      community.general.git_config:
        name: user.email
        repo: "{{ app_name }}"
        scope: local
        value: 'ci-user@example.com'

    - name: Commit create-vite scaffold
      git_commit:
        subject: "Initial {{ create_vite_template }} scaffold with create-vite"
        body: |
          This was done by running:
          {{ create_vite_command }}
        chdir: "{{ app_name }}"

    - name: Run npm install
      community.general.npm:
        path: "{{ app_name }}"

    - name: Commit npm install
      git_commit:
        subject: "Run npm install and add package-lock.json"
        chdir: "{{ app_name }}"

    - name: Run npm run build && npm run lint
      ansible.builtin.shell:
        cmd: npm run build && npm run lint
        chdir: "{{ app_name }}"
      changed_when: false

      #
      # Cleanup
      #

    - name: Remove files
      ansible.builtin.file:
        path: "{{ app_name }}/{{ item }}"
        state: absent
      with_items:
        - public/vite.svg
        - src/App.css
        - src/assets/react.svg
        - src/index.css

    - name: Ensure link rel="icon" href /vite.svg is absent from index.html
      ansible.builtin.lineinfile:
        path: "{{ app_name }}/index.html"
        state: absent
        regexp: '<link rel="icon" type="image/svg\+xml" href="/vite\.svg" />'

    - name: Remove lines from src/main.tsx
      ansible.builtin.lineinfile:
        path: "{{ app_name }}/src/main.tsx"
        state: absent
        regexp: import './index.css'

    - name: Put simple <h1> Hello React App Component
      ansible.builtin.copy:
        content: |
          const title = "Hello React"

          function App() {
            return <h1>{title}</h1>
          }

          export default App;
        dest: "{{ app_name }}/src/App.tsx"
        mode: "0644"

    - name: Put .keep files for empty directories
      ansible.builtin.copy:
        content: ""
        dest: "{{ app_name }}/{{ item }}"
        mode: "0644"
      with_items:
        - public/.keep
        - src/assets/.keep

    - name: Commit cleanup
      git_commit:
        subject: "Simplify create-vite template by removing files"
        body: |
          - Remove .css and .svg files
          - Reduce src/App.tsx to <h1>Hello React</h1>
          - Remove import for removed files in
            - src/App.tsx
            - src/main.tsx
        chdir: "{{ app_name }}"

    - name: Run npm run build && npm run lint
      ansible.builtin.shell:
        cmd: npm run build && npm run lint
        chdir: "{{ app_name }}"
      changed_when: false

    #
    # Prettier
    #

    - name: Install prettier
      my_npm:
        name: prettier
        path: "{{ app_name }}/node_modules"
        save_dev: true

    - name: Add prettier script
      npm_scripts:
        path: "{{ app_name }}/package.json"
        name: prettier
        command: prettier --write .

    - name: Add prettier:ci script
      npm_scripts:
        path: "{{ app_name }}/package.json"
        name: prettier:ci
        command: prettier --check .

    - name: Add prettier config file
      ansible.builtin.copy:
        content: |
          {
            "arrowParens": "avoid",
            "bracketSpacing": false,
            "singleQuote": true,
            "trailingComma": "all",
            "semi": false
          }
        dest: "{{ app_name }}/.prettierrc.json"
        mode: "0644"

    - name: Commit Add prettier
      git_commit:
        subject: "Add prettier"
        body: |
          - npm install --save-dev prettier
          - Add .prettierrc.json
          - Add npm scripts
            - prettier
            - prettier:ci
        chdir: "{{ app_name }}"

    - name: Format files with prettier
      prettier:
        path: "{{ item }}"
        chdir: "{{ app_name }}"
        prettier_cmd: npx prettier
      with_items:
        - README.md
        - src/main.tsx
        - src/App.tsx
        - .eslintrc.cjs
        - vite.config.ts
        - tsconfig.json

    - name: Run npm run prettier:ci
      ansible.builtin.command:
        cmd: npm run prettier:ci
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Commit Reformat all files with prettier
      git_commit:
        subject: "Reformat all files with prettier"
        chdir: "{{ app_name }}"

    #
    # Vitest / React Testing Library
    #

    - name: Add npm scripts for testing
      npm_scripts:
        path: "{{ app_name }}/package.json"
        name: "{{ item.name }}"
        command: "{{ item.command }}"
      with_items:
        - name: test
          command: vitest --run
        - name: test:watch
          command: vitest
        - name: test:ui
          command: vitest --ui
        - name: test:ci
          command: vitest --run

    - name: Install libraries for testing
      my_npm:
        name: "{{ item }}"
        path: "{{ app_name }}/node_modules"
        save_dev: true
      with_items:
        - vitest
        - "@testing-library/react"
        - jsdom
        - "@testing-library/jest-dom"

    - name: Put file App.test.tsx
      ansible.builtin.copy:
        content: |
          import { describe, it, expect } from "vitest";
          import { render, screen } from "@testing-library/react";
          import App from "./App";

          describe("<App />", () => {
            it("shows a greeting", () => {
              render(<App />);

              const heading = screen.getByRole('heading');
              expect(heading).toBeInTheDocument();
              expect(heading).toHaveTextContent(/hello/i);
            })
          })
        dest: "{{ app_name }}/src/App.test.tsx"
        mode: "0644"

    - name: Put file vite.config.ts
      ansible.builtin.copy:
        content: |
          import { defineConfig } from "vite";
          import react from "@vitejs/plugin-react";

          // https://vitejs.dev/config
          export default defineConfig({
            plugins: [react()],
            test: {
              environment: "jsdom",
              globals: true,
              setupFiles: "src/setupTests.ts",
            },
          });
        dest: "{{ app_name }}/vite.config.ts"
        mode: "0644"

    - name: Put file src/setupTests.ts
      ansible.builtin.copy:
        content: |
          import "@testing-library/jest-dom";
        dest: "{{ app_name }}/src/setupTests.ts"
        mode: "0644"

    - name: Run npm run test:ci
      ansible.builtin.command:
        cmd: npm run test:ci
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Format files with prettier
      prettier:
        path: "{{ item }}"
        chdir: "{{ app_name }}"
        prettier_cmd: npx prettier
      with_items:
        - src/App.test.tsx
        - src/setupTests.ts
        - vite.config.ts

    - name: Run npm run prettier:ci
      ansible.builtin.command:
        cmd: npm run prettier:ci
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Commit Add Vitest and React Testing Library
      git_commit:
        subject: "Add Vitest and React Testing Library"
        chdir: "{{ app_name }}"

    #
    # Tailwind CSS
    #

    - name: Install libraries for Tailwind CSS
      my_npm:
        name: "{{ item }}"
        path: "{{ app_name }}/node_modules"
        save_dev: true
      with_items:
        - tailwindcss
        - postcss
        - autoprefixer

    - name: Run npx tailwindcss init -p
      ansible.builtin.command:
        cmd: npx tailwindcss init -p
        chdir: "{{ app_name }}"
        creates: tailwind.config.js

    - name: Put file tailwind.config.js
      ansible.builtin.copy:
        content: |
          /** @type {import('tailwindcss').Config} */
          export default {
            content: ["./index.html", "./src/**/*.{js,ts,jsx,tsx}"],
            theme: {
              extend: {},
            },
            plugins: [],
          };
        dest: "{{ app_name }}/tailwind.config.js"
        mode: "0644"

    - name: Put file src/main.css
      ansible.builtin.copy:
        content: |
          @tailwind base;
          @tailwind components;
          @tailwind utilities;
        dest: "{{ app_name }}/src/main.css"
        mode: "0644"

    - name: Add import line for src/main.css to src/main.tsx
      ansible.builtin.lineinfile:
        path: "{{ app_name }}/src/main.tsx"
        insertbefore: '^import'
        firstmatch: true
        line: 'import "./main.css";'

    - name: Add some styling to our h1 in App
      ansible.builtin.copy:
        content: >
          const title = "Hello React"

          function App() {
            return (
              <h1 className="mb-5 py-5 text-5xl text-center bg-blue-500">
                {title}
              </h1>
            )
          }

          export default App;
        dest: "{{ app_name }}/src/App.tsx"
        mode: "0644"

    - name: Format files with prettier
      prettier:
        path: "{{ item }}"
        chdir: "{{ app_name }}"
        prettier_cmd: npx prettier
      with_items:
        - src/App.tsx
        - src/main.tsx
        - tailwind.config.js

    - name: Run npm run prettier:ci
      ansible.builtin.command:
        cmd: npm run prettier:ci
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Run npm run build && npm run lint
      ansible.builtin.shell:
        cmd: npm run build && npm run lint
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Commit Add Tailwind CSS
      git_commit:
        subject: "Add Tailwind CSS"
        chdir: "{{ app_name }}"

---
- name: My Play
  hosts: all
  gather_facts: false
  vars:
    app_name: my-app-template
    create_vite_template: react-ts
    create_vite_command: >
      npx create-vite {{ app_name }} --template {{ create_vite_template }}
  tasks:
    - name: Install create-vite
      community.general.npm:
        name: create-vite
        version: 5.2.3
        path: node_modules

    - name: Delete package.json and package-lock.json created above
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      with_items:
        - package.json
        - package-lock.json

    - name: Run create-vite
      ansible.builtin.command:
        cmd: "{{ create_vite_command }}"
        creates: "{{ app_name }}"

    - name: Run git init
      ansible.builtin.command:
        cmd: git init
        chdir: "{{ app_name }}"
        creates: .git
      tags:
        - skip_ansible_lint

    - name: Add user name to git config
      community.general.git_config:
        name: user.name
        repo: "{{ app_name }}"
        scope: local
        value: 'CI User'

    - name: Add user email to git config
      community.general.git_config:
        name: user.email
        repo: "{{ app_name }}"
        scope: local
        value: 'ci-user@example.com'

    - name: Commit create-vite scaffold
      git_commit:
        subject: "Initial {{ create_vite_template }} scaffold with create-vite"
        body: |
          This was done by running:
          {{ create_vite_command }}
        chdir: "{{ app_name }}"

    - name: Run npm install
      community.general.npm:
        path: "{{ app_name }}"

    - name: Commit npm install
      git_commit:
        subject: "Run npm install and add package-lock.json"
        chdir: "{{ app_name }}"

    - name: Run npm run build && npm run lint
      ansible.builtin.shell:
        cmd: npm run build && npm run lint
        chdir: "{{ app_name }}"
      changed_when: false

      #
      # Cleanup
      #

    - name: Remove files
      ansible.builtin.file:
        path: "{{ app_name }}/{{ item }}"
        state: absent
      with_items:
        - public/vite.svg
        - src/App.css
        - src/assets/react.svg
        - src/index.css

    - name: Ensure link rel="icon" href /vite.svg is absent from index.html
      ansible.builtin.lineinfile:
        path: "{{ app_name }}/index.html"
        state: absent
        regexp: '<link rel="icon" type="image/svg\+xml" href="/vite\.svg" />'

    - name: Remove lines from src/main.tsx
      ansible.builtin.lineinfile:
        path: "{{ app_name }}/src/main.tsx"
        state: absent
        regexp: import './index.css'

    - name: Put simple <h1> Hello React App Component
      ansible.builtin.copy:
        content: |
          function App() {
            return <h1>Hello React</h1>;
          }

          export default App;
        dest: "{{ app_name }}/src/App.tsx"
        mode: "0644"

    - name: Put .keep files for empty directories
      ansible.builtin.copy:
        content: ""
        dest: "{{ app_name }}/{{ item }}"
        mode: "0644"
      with_items:
        - public/.keep
        - src/assets/.keep

    - name: Commit cleanup
      git_commit:
        subject: "Simplify create-vite template by removing files"
        body: |
          - Remove .css and .svg files
          - Reduce src/App.tsx to <h1>Hello React</h1>
          - Remove import for removed files in
            - src/App.tsx
            - src/main.tsx
        chdir: "{{ app_name }}"

    - name: Run npm run build && npm run lint
      ansible.builtin.shell:
        cmd: npm run build && npm run lint
        chdir: "{{ app_name }}"
      changed_when: false

    #
    # Prettier
    #

    - name: Install prettier
      my_npm:
        name: prettier
        path: "{{ app_name }}/node_modules"
        save_dev: true

    - name: Add prettier script
      npm_scripts:
        path: "{{ app_name }}/package.json"
        name: prettier
        command: prettier --write .

    - name: Add prettier:ci script
      npm_scripts:
        path: "{{ app_name }}/package.json"
        name: prettier:ci
        command: prettier --check .

    - name: Add prettier config file
      ansible.builtin.copy:
        content: |
          {
            "arrowParens": "avoid",
            "bracketSpacing": false,
            "singleQuote": true,
            "trailingComma": "all",
            "semi": false
          }
        dest: "{{ app_name }}/.prettierrc.json"
        mode: "0644"

    - name: Commit Add prettier
      git_commit:
        subject: "Add prettier"
        chdir: "{{ app_name }}"

    - name: Format files with prettier
      prettier:
        path: "{{ item }}"
        chdir: "{{ app_name }}"
        prettier_cmd: npx prettier
      with_items:
        - README.md
        - src/main.tsx
        - src/App.tsx
        - .eslintrc.cjs
        - vite.config.ts
        - tsconfig.json

    - name: Run npm run prettier:ci
      ansible.builtin.command:
        cmd: npm run prettier:ci
        chdir: "{{ app_name }}"
      changed_when: false

    - name: Commit Reformat all files with prettier
      git_commit:
        subject: "Reformat all files with prettier"
        chdir: "{{ app_name }}"
